- name: Get Cloudera API version
  uri:
    url: "http://localhost:7180/api/version"
    method: GET
    user: admin
    password: "{{ cloudera_admin_password }}"
    return_content: yes
  register: scm_api_version

- name: Show Cloudera Manager API version
  debug: var=scm_api_version

- name: Get Cloudera SCM version
  uri:
    url: "http://localhost:7180/api/{{scm_api_version.content}}/cm/version"
    method: GET
    user: admin
    password: "{{ cloudera_admin_password }}"
    return_content: yes
  register: scm_version_response

- name: Show SCM version
  debug: var=scm_version_response

- set_fact: cloudera_scm_version="{{scm_version_response.json.version}}"

- name: Generate Cloudera cluster template file
  template: src=cluster.json.j2 dest=/tmp/cloudera_cluster.json
  delegate_to: localhost

- block:
    - name: Create Cloudera cluster
      uri:
        url: "http://localhost:7180/api/{{scm_api_version.content}}/cm/importClusterTemplate"
        method: POST
        user: admin
        password: "{{ cloudera_admin_password }}"
        body_format: json
        force_basic_auth: yes
        body: "{{ lookup('file', '/tmp/cloudera_cluster.json') }}"
        return_content: yes
      register: cdh_cluster_response
      failed_when:
        - cdh_cluster_response.status != 200
        - "'Duplicate entry' not in cdh_cluster_response.content"
  always:
    - name: Show CDH Cluster importation response
      debug: var=cdh_cluster_response
    - name: Check cdh_response
      debug: msg="{% if 'Duplicate entry' in cdh_cluster_response.content %} patern found {% else %} patern not found {% endif %}"

#- debug: var=cdh_cluster_response

#- name: Delete Cloudera cluster template file
#  file: path=/tmp/scm.json state=absent
#  delegate_to: localhost
