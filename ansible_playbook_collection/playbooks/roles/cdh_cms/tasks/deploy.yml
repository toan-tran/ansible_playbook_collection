- name: Wait 30 sec for all Cloudera Agents report in
  pause: seconds=30

- name: Get Cloudera API version
  uri:
    url: "http://localhost:7180/api/version"
    method: GET
    user: admin
    password: "{{ cloudera_admin_password }}"
    return_content: yes
  register: scm_api_version

- name: Show Cloudera Manager API version
  debug: var=scm_api_version

- set_fact: cms_host_fullname="{{ hostvars[groups['cdh-cms'][0]]['fqdn'] | default(hostvars[groups['cdh-cms'][0]]['ansible_fqdn']) }}"

- name: Make Cloudera CMS template
  template: src=cms.json.j2 dest=/tmp/cloudera_cms.json
  delegate_to: localhost

- name: Install Cloudera Management Service (CMS)
  uri:
    url:  "http://localhost:7180/api/{{scm_api_version.content}}/cm/service"
    method: PUT
    body_format: json
    body: "{{ lookup('file', '/tmp/cloudera_cms.json') }}"
    status_code: 100,200,400
    user: admin
    password: "{{ cloudera_admin_password }}"
    return_content: yes
  register: cms_resp
  failed_when:
    - "'MGMT' not in cms_resp.content"
    - "'CMS instance already exists' not in cms_resp.content"
  ignore_errors: yes

- name: Show CMS response
  debug: var=cms_resp

- name: Start Cloudera Management Services
  uri:
    url: "http://localhost:7180/api/{{scm_api_version.content}}/cm/service/commands/start"
    method: POST
    status_code: 200
    force_basic_auth: yes
    user: admin
    password: "{{ cloudera_admin_password }}"
    return_content: yes
  register: start_resp
  failed_when: "'startTime' not in start_resp.content"

- name: Show CMS Start response
  debug: var=start_resp

- name: Delete CMS template
  file: path=/tmp/cloudera_cms.json state=absent
  delegate_to: localhost
