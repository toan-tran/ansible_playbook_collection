- name: Install pip
  become: yes
  apt: name="{{ ansible_python.executable | basename }}-pip"
  when: ansible_os_family == 'Debian'

- name: Install pip
  become: yes
  yum: name="{{ ansible_python.executable | basename }}-pip"
  when: ansible_os_family == 'RedHat'

- name: Install httplib2
  become: yes
  pip: name=httplib2

- name: Get Cloudera API version
  uri:
    url: "http://localhost:7180/api/version"
    method: GET
    user: admin
    password: "{{ cloudera_admin_password }}"
    return_content: yes
  register: scm_api_version

- name: Get Cloudera SCM version
  uri:
    url: "http://localhost:7180/api/{{scm_api_version.content}}/cm/version"
    method: GET
    user: admin
    password: "{{ cloudera_admin_password }}"
    return_content: yes
  register: scm_version_response

- set_fact: cloudera_manager_version="{{scm_version_response.json.version}}"

- name: Generate Cloudera cluster template file
  template: src="{{ cloudera_cluster_template_file }}" dest=/tmp/cloudera_cluster.json
  delegate_to: localhost

- name: Get current parcel repositories
  cm_config:
    cm_username: "admin"
    cm_password: "{{ cloudera_admin_password }}"
    cm_url: "http://localhost:7180"
    action: get
    view: "full"
    name: "REMOTE_PARCEL_REPO_URLS"
  register: cm_parcel_urls

- set_fact:
    cm_parcel_url_list: "{{ cm_parcel_urls['content']['items'][0]['value'].split(',') }}"

- block:
  - set_fact:
      cm_new_parcel_urls:  "{{ cm_parcel_url_list + [cloudera_cdh_parcel_url] }}"
  
  - name: Show new cm_parcel_urls
    debug: var=cm_new_parcel_urls
  
  - name: Add new parcel repositories
    cm_config:
      cm_username: "admin"
      cm_password: "{{ cloudera_admin_password }}"
      cm_url: "http://localhost:7180"
      action: set
      name: "REMOTE_PARCEL_REPO_URLS"
      value: "{{ cm_new_parcel_urls | join(',') }}"

  - name: Sleep 30 sec
    pause: seconds=30
  when: cloudera_cdh_parcel_url not in cm_parcel_url_list

- block:
    - name: Create Cloudera cluster
      uri:
        url: "http://localhost:7180/api/{{scm_api_version.content}}/cm/importClusterTemplate"
        method: POST
        user: admin
        password: "{{ cloudera_admin_password }}"
        body_format: json
        force_basic_auth: yes
        body: "{{ lookup('file', '/tmp/cloudera_cluster.json') }}"
        return_content: yes
      register: cdh_cluster_response
      failed_when:
        - cdh_cluster_response.status != 200
        - "'Duplicate entry' not in cdh_cluster_response.content"
  always:
    - name: Show CDH Cluster importation response
      debug: var=cdh_cluster_response

    - name: Show CDH Cluster importation response status
      debug: var=cdh_cluster_response.status

- name: Delete Cloudera cluster template file
  file: path=/tmp/scm.json state=absent
  delegate_to: localhost
  tags: cdh-cluster-delete-template
